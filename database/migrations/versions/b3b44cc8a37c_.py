"""empty message

Revision ID: b3b44cc8a37c
Revises: 
Create Date: 2025-01-08 17:46:35.639879

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b3b44cc8a37c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('product_form')
    op.drop_table('product_color')
    op.drop_table('price')
    op.drop_table('options')
    op.add_column('products', sa.Column('ru_name_name', sa.String(length=255), nullable=False))
    op.add_column('products', sa.Column('ru_name_desc', sa.String(length=1024), nullable=False))
    op.add_column('products', sa.Column('en_name_name', sa.String(length=255), nullable=False))
    op.add_column('products', sa.Column('en_name_desc', sa.String(length=1024), nullable=False))
    op.add_column('products', sa.Column('price_ru', sa.Float(), nullable=False))
    op.add_column('products', sa.Column('price_en', sa.Float(), nullable=False))
    op.add_column('products', sa.Column('options_isForm', sa.Boolean(), nullable=False))
    op.add_column('products', sa.Column('options_isColor', sa.Boolean(), nullable=False))
    op.add_column('products', sa.Column('options_formId', sa.JSON(), nullable=False))
    op.add_column('products', sa.Column('options_colorId', sa.JSON(), nullable=False))
    op.drop_column('products', 'en_name')
    op.drop_column('products', 'en_desc')
    op.drop_column('products', 'ru_name')
    op.drop_column('products', 'ru_desc')
    op.drop_constraint('reviews_ProductId_fkey', 'reviews', type_='foreignkey')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key('reviews_ProductId_fkey', 'reviews', 'products', ['ProductId'], ['id'])
    op.add_column('products', sa.Column('ru_desc', sa.VARCHAR(length=1024), autoincrement=False, nullable=False))
    op.add_column('products', sa.Column('ru_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('products', sa.Column('en_desc', sa.VARCHAR(length=1024), autoincrement=False, nullable=False))
    op.add_column('products', sa.Column('en_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.drop_column('products', 'options_colorId')
    op.drop_column('products', 'options_formId')
    op.drop_column('products', 'options_isColor')
    op.drop_column('products', 'options_isForm')
    op.drop_column('products', 'price_en')
    op.drop_column('products', 'price_ru')
    op.drop_column('products', 'en_name_desc')
    op.drop_column('products', 'en_name_name')
    op.drop_column('products', 'ru_name_desc')
    op.drop_column('products', 'ru_name_name')
    op.create_table('options',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('isForm', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('isColor', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='options_pkey')
    )
    op.create_table('price',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('ru_name', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('en_name', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='price_pkey')
    )
    op.create_table('product_color',
    sa.Column('product_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('color_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['color_id'], ['colors.id'], name='product_color_color_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='product_color_product_id_fkey'),
    sa.PrimaryKeyConstraint('product_id', 'color_id', name='product_color_pkey')
    )
    op.create_table('product_form',
    sa.Column('product_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('form_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['form_id'], ['forms.id'], name='product_form_form_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='product_form_product_id_fkey'),
    sa.PrimaryKeyConstraint('product_id', 'form_id', name='product_form_pkey')
    )
    # ### end Alembic commands ###
